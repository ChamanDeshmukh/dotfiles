"   _   _ ________  _________  _____ 
"  | | | |_   _|  \/  || ___ \/  __ \
"  | | | | | | | .  . || |_/ /| /  \/
"  | | | | | | | |\/| ||    / | |    
"  \ \_/ /_| |_| |  | || |\ \ | \__/\
"   \___/ \___/\_|  |_/\_| \_| \____/

"if ! filereadable(system('echo -n "${XDG_CONFIG_HOME:-$HOME/.config}/vim/autoload/plug.vim"'))
"	echo "Downloading junegunn/vim-plug to manage plugins..."
"	silent !mkdir -p ${XDG_CONFIG_HOME:-$HOME/.config}/vim/autoload/
"	silent !curl "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim" > ${XDG_CONFIG_HOME:-$HOME/.config}/vim/autoload/plug.vim
"	autocmd VimEnter * PlugInstall
"endif
"
"call plug#begin(system('echo -n "${XDG_CONFIG_HOME:-$HOME/.config}/vim/plugged"'))
"call plug#end()

filetype plugin on

let mapleader = ","
set t_Co=256
set termguicolors
set belloff=all
set number
set relativenumber	 
set ruler
set showcmd
set nocompatible
set nowrap
set ttyfast
set ttimeout
set timeout
set ignorecase

set shortmess=atI
tab all
set tabpagemax=20
set bg=dark
set mouse=a
set showtabline=2
set tabstop=4
set shiftwidth=4
set timeoutlen=500
set ttimeoutlen=0
set numberwidth=1
set laststatus=2
set omnifunc=syntaxcomplete#Complete
set viminfo+=n~/.vim/viminfo

syntax enable
syntax on

let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"
" reset the cursor on start (for older versions of vim, usually not required)
augroup ENDhighlight VertSplit guibg=#181818 guifg=#996228

"highlight SLBackground guibg=#181818 guifg=#996228
"highlight SLFileType guibg=indianred guifg=#663333
"highlight SLBufNumber guibg=SeaGreen guifg=#003333
"highlight SLLineNumber guibg=#80a0ff guifg=#003366

highlight SLBackground guibg=#000000 guifg=#ffffff
highlight SLFileType guibg=#000000 guifg=#ffffff
highlight SLBufNumber guibg=#000000 guifg=#ffffff
highlight SLLineNumber guibg=#000000 guifg=#ffffff

set statusline=
set statusline=\%#SLBackground#
set statusline+=\ %F
set statusline+=\%= " separator
set statusline+=\ %#SLFileType#
set statusline+=\ FT:\ %Y
set statusline+=\ %#SLBufNumber#
set statusline+=\ BN:\ %n
set statusline+=\ %#SLLineNumber#
set statusline+=\ \%p%%
set statusline+=\ LN:\ %l:%c


" Navigate the complete menu items like CTRL+n / CTRL+p would.
inoremap <expr> <Down> pumvisible() ? "<C-n>" :"<Down>"
inoremap <expr> <Up> pumvisible() ? "<C-p>" : "<Up>"

" Select the complete menu item like CTRL+y would.
inoremap <expr> <Right> pumvisible() ? "<C-y>" : "<Right>"
inoremap <expr> <CR> pumvisible() ? "<C-y>" :"<CR>"

" Cancel the complete menu item like CTRL+e would.
inoremap <expr> <ESC> pumvisible() ? "<C-e>" : "<ESC>"

inoremap jk <esc>
inoremap kj <esc>

nnoremap <Leader>a :tabprevious<CR>
nnoremap <leader>f :tabnext<CR>

"NERDTree config
nnoremap <C-n> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>

" Start NERDTree and put the cursor back in the other window.
" autocmd VimEnter * NERDTree | wincmd p

" Close the tab if NERDTree is the only window remaining in it.
autocmd BufEnter * if winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif

let g:vimwiki_list = [{'path': '$HOME/stg/ld_d/school/vault/B.TECH/','syntax': 'markdown', 'ext': '.md'}]

autocmd BufWritePost ~/.local/share/dwm_setup/dwmblocks/config.h !cd ~/.local/share/dwm_setup/dwmblocks/; sudo make install && { killall -q dwmblocks;setsid dwmblocks & }

:so ~/.config/vim/snippet.vim
